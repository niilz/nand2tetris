// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:

    // increments current value (temp value)
    Inc16(in=out1, out=plus1);

    // choose plus1 (if inc) or else: old_value
    Mux16(a=out1, b=plus1, sel=inc, out=out2);

    // choose in_value (if load) or else: plus1-or-old_value
    Mux16(a=out2, b=in, sel=load, out=lastORin);

    // reset to zero (if reset) else: in_value-or-plus1-or-old_value
    Mux16(a=lastORin, b=false, sel=reset, out=out3);

    // return zero-or-in_value-or-plus1-or-old_value
    // also: feed output (out1) back into top (Inc16, Mux16)
    Register(in=out3, load=true, out=out1, out=out);
}